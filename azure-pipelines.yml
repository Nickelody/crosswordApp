# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
  - bash: |
      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-29;google_apis;x86'
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator -k 'system-images;android-29;google_apis;x86' --force
      
      $ANDROID_HOME/emulator/emulator -list-avds
      
      echo "Starting emulator"
      nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot > /dev/null 2>&1 &
      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
      
      $ANDROID_HOME/platform-tools/adb devices

      $ANDROID_HOME/platform-tools/adb shell settings put global window_animation_scale 0 &
      $ANDROID_HOME/platform-tools/adb shell settings put global transition_animation_scale 0 &
      $ANDROID_HOME/platform-tools/adb shell settings put global animator_duration_scale 0 &
      
      echo "Emulator started"
    displayName: 'Run Android Emulator'

  - bash: |
      ./gradlew connectedDebugAndroidTest --info
      if [ $? -ne 0 ]; then
          exit 1
      fi
      ./gradlew --stop
    displayName: 'Run Instrumented Tests'

